#!/bin/bash

set -eu

readonly SOURCE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
readonly TEST_IMAGE="cloudron/test:25.2.0"

# reset sudo timestamp to avoid wrong success
sudo -k || sudo --reset-timestamp

# checks if all scripts are sudo access
scripts=("${SOURCE_DIR}/src/scripts/rmvolume.sh" \
         "${SOURCE_DIR}/src/scripts/rmaddon.sh" \
         "${SOURCE_DIR}/src/scripts/reloadnginx.sh" \
         "${SOURCE_DIR}/src/scripts/reboot.sh" \
         "${SOURCE_DIR}/src/scripts/update.sh" \
         "${SOURCE_DIR}/src/scripts/collectlogs.sh" \
         "${SOURCE_DIR}/src/scripts/configurecollectd.sh" \
         "${SOURCE_DIR}/src/scripts/authorized_keys.sh" \
         "${SOURCE_DIR}/src/backuptask.js" \
         "${SOURCE_DIR}/src/scripts/configurelogrotate.sh")

for script in "${scripts[@]}"; do
    if [[ $(sudo -n "${script}" --check 2>/dev/null) != "OK" ]]; then
        echo ""
        echo "${script} does not have sudo access."
        echo "You have to add the lines below to /etc/sudoers.d/yellowtent."
        echo ""
        echo "Defaults!${script} env_keep=\"HOME BOX_ENV\""
        echo "${USER} ALL=(ALL) NOPASSWD: ${script}"
        echo ""
        exit 1
    fi
done

image_missing=""

images=$(node -e "var i = require('${SOURCE_DIR}/src/infra_version.js'); console.log(Object.keys(i.images).map(function (x) { return i.images[x].tag; }).join('\n'));"; echo $TEST_IMAGE)

for image in ${images}; do
    if ! docker inspect "${image}" >/dev/null 2>/dev/null; then
        echo "docker pull ${image}"
        image_missing="true"
    fi
done

if [[ "${image_missing}" == "true" ]]; then
    echo "Pull above images before running tests"
    exit 1
fi
